"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return CopyFactory;
    }
});
const _httpClient = /*#__PURE__*/ _interop_require_default(require("./clients/httpClient"));
const _configurationclient = /*#__PURE__*/ _interop_require_default(require("./clients/copyFactory/configuration.client"));
const _historyclient = /*#__PURE__*/ _interop_require_default(require("./clients/copyFactory/history.client"));
const _tradingclient = /*#__PURE__*/ _interop_require_default(require("./clients/copyFactory/trading.client"));
const _domainclient = /*#__PURE__*/ _interop_require_default(require("./clients/domain.client"));
const _logger = /*#__PURE__*/ _interop_require_default(require("./logger"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
let CopyFactory = class CopyFactory {
    /**
   * Enables using Log4js logger with extended log levels for debugging instead of
   * console.* functions. Note that log4js configuration performed by the user.
   */ static enableLog4jsLogging() {
        _logger.default.useLog4js();
    }
    /**
   * Returns CopyFactory configuration API
   * @returns {ConfigurationClient} configuration API
   */ get configurationApi() {
        return this._configurationClient;
    }
    /**
   * Returns CopyFactory history API
   * @return {HistoryClient} history API
   */ get historyApi() {
        return this._historyClient;
    }
    /**
   * Returns CopyFactory trading API
   * @return {TradingClient} trading API
   */ get tradingApi() {
        return this._tradingClient;
    }
    /**
   * Constructs CopyFactory class instance
   * @param {String} token authorization token
   * @param {Object} opts connection options
   * @param {String} [opts.domain] domain to connect to
   * @param {String} [opts.extendedTimeout] timeout for extended http requests in seconds
   * @param {Number} [opts.requestTimeout] timeout for http requests in seconds
   */ constructor(token, opts = {}){
        this._domain = opts.domain || "agiliumtrade.agiliumtrade.ai";
        let requestTimeout = opts.requestTimeout || 10;
        let requestExtendedTimeout = opts.extendedTimeout || 70;
        const retryOpts = opts.retryOpts || {};
        this._httpClient = new _httpClient.default(requestTimeout, requestExtendedTimeout, retryOpts);
        this._domainClient = new _domainclient.default(this._httpClient, token, this._domain);
        this._configurationClient = new _configurationclient.default(this._domainClient);
        this._historyClient = new _historyclient.default(this._domainClient);
        this._tradingClient = new _tradingclient.default(this._domainClient);
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxhbm9uPiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBIdHRwQ2xpZW50IGZyb20gJy4vY2xpZW50cy9odHRwQ2xpZW50JztcbmltcG9ydCBDb25maWd1cmF0aW9uQ2xpZW50IGZyb20gJy4vY2xpZW50cy9jb3B5RmFjdG9yeS9jb25maWd1cmF0aW9uLmNsaWVudCc7XG5pbXBvcnQgSGlzdG9yeUNsaWVudCBmcm9tICcuL2NsaWVudHMvY29weUZhY3RvcnkvaGlzdG9yeS5jbGllbnQnO1xuaW1wb3J0IFRyYWRpbmdDbGllbnQgZnJvbSAnLi9jbGllbnRzL2NvcHlGYWN0b3J5L3RyYWRpbmcuY2xpZW50JztcbmltcG9ydCBEb21haW5DbGllbnQgZnJvbSAnLi9jbGllbnRzL2RvbWFpbi5jbGllbnQnO1xuaW1wb3J0IExvZ2dlck1hbmFnZXIgZnJvbSAnLi9sb2dnZXInO1xuXG4vKipcbiAqIE1ldGFBcGkgQ29weUZhY3RvcnkgY29weSB0cmFkaW5nIEFQSSBTREtcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29weUZhY3Rvcnkge1xuXG4gIC8qKlxuICAgKiBFbmFibGVzIHVzaW5nIExvZzRqcyBsb2dnZXIgd2l0aCBleHRlbmRlZCBsb2cgbGV2ZWxzIGZvciBkZWJ1Z2dpbmcgaW5zdGVhZCBvZlxuICAgKiBjb25zb2xlLiogZnVuY3Rpb25zLiBOb3RlIHRoYXQgbG9nNGpzIGNvbmZpZ3VyYXRpb24gcGVyZm9ybWVkIGJ5IHRoZSB1c2VyLlxuICAgKi9cbiAgc3RhdGljIGVuYWJsZUxvZzRqc0xvZ2dpbmcoKSB7XG4gICAgTG9nZ2VyTWFuYWdlci51c2VMb2c0anMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIENvcHlGYWN0b3J5IGNsYXNzIGluc3RhbmNlXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB0b2tlbiBhdXRob3JpemF0aW9uIHRva2VuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIGNvbm5lY3Rpb24gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdHMuZG9tYWluXSBkb21haW4gdG8gY29ubmVjdCB0b1xuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdHMuZXh0ZW5kZWRUaW1lb3V0XSB0aW1lb3V0IGZvciBleHRlbmRlZCBodHRwIHJlcXVlc3RzIGluIHNlY29uZHNcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRzLnJlcXVlc3RUaW1lb3V0XSB0aW1lb3V0IGZvciBodHRwIHJlcXVlc3RzIGluIHNlY29uZHNcbiAgICovXG4gIGNvbnN0cnVjdG9yKHRva2VuLCBvcHRzID0ge30pIHtcbiAgICB0aGlzLl9kb21haW4gPSBvcHRzLmRvbWFpbiB8fCAnYWdpbGl1bXRyYWRlLmFnaWxpdW10cmFkZS5haSc7XG4gICAgbGV0IHJlcXVlc3RUaW1lb3V0ID0gb3B0cy5yZXF1ZXN0VGltZW91dCB8fCAxMDtcbiAgICBsZXQgcmVxdWVzdEV4dGVuZGVkVGltZW91dCA9IG9wdHMuZXh0ZW5kZWRUaW1lb3V0IHx8IDcwO1xuICAgIGNvbnN0IHJldHJ5T3B0cyA9IG9wdHMucmV0cnlPcHRzIHx8IHt9O1xuICAgIHRoaXMuX2h0dHBDbGllbnQgPSBuZXcgSHR0cENsaWVudChyZXF1ZXN0VGltZW91dCwgcmVxdWVzdEV4dGVuZGVkVGltZW91dCwgcmV0cnlPcHRzKTtcbiAgICB0aGlzLl9kb21haW5DbGllbnQgPSBuZXcgRG9tYWluQ2xpZW50KHRoaXMuX2h0dHBDbGllbnQsIHRva2VuLCB0aGlzLl9kb21haW4pO1xuICAgIHRoaXMuX2NvbmZpZ3VyYXRpb25DbGllbnQgPSBuZXcgQ29uZmlndXJhdGlvbkNsaWVudCh0aGlzLl9kb21haW5DbGllbnQpO1xuICAgIHRoaXMuX2hpc3RvcnlDbGllbnQgPSBuZXcgSGlzdG9yeUNsaWVudCh0aGlzLl9kb21haW5DbGllbnQpO1xuICAgIHRoaXMuX3RyYWRpbmdDbGllbnQgPSBuZXcgVHJhZGluZ0NsaWVudCh0aGlzLl9kb21haW5DbGllbnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgQ29weUZhY3RvcnkgY29uZmlndXJhdGlvbiBBUElcbiAgICogQHJldHVybnMge0NvbmZpZ3VyYXRpb25DbGllbnR9IGNvbmZpZ3VyYXRpb24gQVBJXG4gICAqL1xuICBnZXQgY29uZmlndXJhdGlvbkFwaSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY29uZmlndXJhdGlvbkNsaWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIENvcHlGYWN0b3J5IGhpc3RvcnkgQVBJXG4gICAqIEByZXR1cm4ge0hpc3RvcnlDbGllbnR9IGhpc3RvcnkgQVBJXG4gICAqL1xuICBnZXQgaGlzdG9yeUFwaSgpIHtcbiAgICByZXR1cm4gdGhpcy5faGlzdG9yeUNsaWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIENvcHlGYWN0b3J5IHRyYWRpbmcgQVBJXG4gICAqIEByZXR1cm4ge1RyYWRpbmdDbGllbnR9IHRyYWRpbmcgQVBJXG4gICAqL1xuICBnZXQgdHJhZGluZ0FwaSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdHJhZGluZ0NsaWVudDtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkNvcHlGYWN0b3J5IiwiZW5hYmxlTG9nNGpzTG9nZ2luZyIsIkxvZ2dlck1hbmFnZXIiLCJ1c2VMb2c0anMiLCJjb25maWd1cmF0aW9uQXBpIiwiX2NvbmZpZ3VyYXRpb25DbGllbnQiLCJoaXN0b3J5QXBpIiwiX2hpc3RvcnlDbGllbnQiLCJ0cmFkaW5nQXBpIiwiX3RyYWRpbmdDbGllbnQiLCJjb25zdHJ1Y3RvciIsInRva2VuIiwib3B0cyIsIl9kb21haW4iLCJkb21haW4iLCJyZXF1ZXN0VGltZW91dCIsInJlcXVlc3RFeHRlbmRlZFRpbWVvdXQiLCJleHRlbmRlZFRpbWVvdXQiLCJyZXRyeU9wdHMiLCJfaHR0cENsaWVudCIsIkh0dHBDbGllbnQiLCJfZG9tYWluQ2xpZW50IiwiRG9tYWluQ2xpZW50IiwiQ29uZmlndXJhdGlvbkNsaWVudCIsIkhpc3RvcnlDbGllbnQiLCJUcmFkaW5nQ2xpZW50Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztlQVlxQkE7OzttRUFWRTs0RUFDUztzRUFDTjtzRUFDQTtxRUFDRDsrREFDQzs7Ozs7O0FBS1gsSUFBQSxBQUFNQSxjQUFOLE1BQU1BO0lBRW5COzs7R0FHQyxHQUNELE9BQU9DLHNCQUFzQjtRQUMzQkMsZUFBYSxDQUFDQyxTQUFTO0lBQ3pCO0lBc0JBOzs7R0FHQyxHQUNELElBQUlDLG1CQUFtQjtRQUNyQixPQUFPLElBQUksQ0FBQ0Msb0JBQW9CO0lBQ2xDO0lBRUE7OztHQUdDLEdBQ0QsSUFBSUMsYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDQyxjQUFjO0lBQzVCO0lBRUE7OztHQUdDLEdBQ0QsSUFBSUMsYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDQyxjQUFjO0lBQzVCO0lBMUNBOzs7Ozs7O0dBT0MsR0FDREMsWUFBWUMsS0FBSyxFQUFFQyxPQUFPLENBQUMsQ0FBQyxDQUFFO1FBQzVCLElBQUksQ0FBQ0MsT0FBTyxHQUFHRCxLQUFLRSxNQUFNLElBQUk7UUFDOUIsSUFBSUMsaUJBQWlCSCxLQUFLRyxjQUFjLElBQUk7UUFDNUMsSUFBSUMseUJBQXlCSixLQUFLSyxlQUFlLElBQUk7UUFDckQsTUFBTUMsWUFBWU4sS0FBS00sU0FBUyxJQUFJLENBQUM7UUFDckMsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUMsbUJBQVUsQ0FBQ0wsZ0JBQWdCQyx3QkFBd0JFO1FBQzFFLElBQUksQ0FBQ0csYUFBYSxHQUFHLElBQUlDLHFCQUFZLENBQUMsSUFBSSxDQUFDSCxXQUFXLEVBQUVSLE9BQU8sSUFBSSxDQUFDRSxPQUFPO1FBQzNFLElBQUksQ0FBQ1Isb0JBQW9CLEdBQUcsSUFBSWtCLDRCQUFtQixDQUFDLElBQUksQ0FBQ0YsYUFBYTtRQUN0RSxJQUFJLENBQUNkLGNBQWMsR0FBRyxJQUFJaUIsc0JBQWEsQ0FBQyxJQUFJLENBQUNILGFBQWE7UUFDMUQsSUFBSSxDQUFDWixjQUFjLEdBQUcsSUFBSWdCLHNCQUFhLENBQUMsSUFBSSxDQUFDSixhQUFhO0lBQzVEO0FBeUJGIn0=